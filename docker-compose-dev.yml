version: '3'
services:
  api-dev:
    build: .
    command:
      - /bin/sh
      - -c
      - |
        python3 -m flask db upgrade
        python3 -m flask run --host=0.0.0.0
    container_name: ${APP_NAME}-${FLASK_ENV}-api
    image: ${APP_NAME}-api-${FLASK_ENV}:latest
    volumes:
      - ./src:/structure-demo/src
      - ./migrations:/structure-demo/migrations
      - ./logs:/structure-demo/logs
      - ./backups:/structure-demo/backups
    ports:
      - 5001:5000
    environment:
      - FLASK_APP=${FLASK_APP}
      - FLASK_ENV=${FLASK_ENV}
    depends_on:
      - postgres
      - redis
    networks:
      - internal_network

  worker-dev:
    build: .
    command: celery --app src.libs.task.async_task.celery worker --loglevel=info
    container_name: ${APP_NAME}-${FLASK_ENV}-worker
    image: ${APP_NAME}-worker-${FLASK_ENV}:latest
    volumes:
      - ./src:/structure-demo/src
    environment:
      - FLASK_ENV=${FLASK_ENV}
    depends_on:
      - postgres
      - redis
      - api-dev
    networks:
      - internal_network

  postgres:
    container_name: ${APP_NAME}-postgres
    image: postgres:12
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    networks:
      - internal_network

  redis:
    container_name: ${APP_NAME}-redis
    image: redis:6.2-alpine
    restart: always
    volumes:
      - redis:/data
    ports:
      - 6380:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    networks:
      - internal_network

volumes:
  postgres:
  redis:

networks:
  internal_network: